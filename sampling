#include <Wire.h>
#include <INA219_WE.h>

INA219_WE ina219;

float current,vb;
unsigned int sensorValue0;
unsigned int loopTrigger;
unsigned int com_count = 0;

void setup(){
   //Basic pin setups
  
  noInterrupts(); //disable all interrupts
  analogReference(EXTERNAL); // We are using an external analogue reference for the ADC

  // TimerA0 initialization for control-loop interrupt.
  
  TCA0.SINGLE.PER = 999; //
  TCA0.SINGLE.CMP1 = 999; //
  TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV16_gc | TCA_SINGLE_ENABLE_bm; //16 prescaler, 1M.
  TCA0.SINGLE.INTCTRL = TCA_SINGLE_CMP1_bm; 

  // TimerB0 initialization for PWM output
  
  pinMode(6, OUTPUT);
  TCB0.CTRLA=TCB_CLKSEL_CLKDIV1_gc | TCB_ENABLE_bm; //62.5kHz
  analogWrite(6,120); 

  Serial.begin(115200);   //serial communication enable. Used for program debugging.
  interrupts();  //enable interrupts.
  Wire.begin(); // We need this for the i2c comms for the current sensor
  ina219.init(); // this initiates the current sensor
  Wire.setClock(700000); // set the comms speed for i2c
  
}


void loop() {
  if(loopTrigger){
   
    sampling();


   
    com_count++;
    if(com_count>=1000){
      Serial.print("Vb: ");
      Serial.print(vb);
      Serial.print("\t");

      Serial.print("Current: ");
      Serial.print(current);
      Serial.print("\n");


      com_count = 0;
    }
    
    loopTrigger = 0;
  }
}

ISR(TCA0_CMP1_vect){
  TCA0.SINGLE.INTFLAGS |= TCA_SINGLE_CMP1_bm; //clear interrupt flag
  loopTrigger = 1;
}


void sampling() {
  sensorValue0 = analogRead(A0);
  vb = sensorValue0 * (12400/2400) * (4.096/1023);
  current = ina219.getCurrent_mA();
}
