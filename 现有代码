#include <Wire.h>
#include <INA219_WE.h>

INA219_WE ina219;

float voltage_now = 0,voltage_before = 50,power_now = 0,power_before = 0;
float current, pwm = 0.6;
unsigned int sensorValue0;
unsigned int loopTrigger;
unsigned int com_count = 0;

void setup(){
   //Basic pin setups
  
  noInterrupts(); //disable all interrupts
  analogReference(EXTERNAL); // We are using an external analogue reference for the ADC

  // TimerA0 initialization for control-loop interrupt.
  
  TCA0.SINGLE.PER = 999; //
  TCA0.SINGLE.CMP1 = 999; //
  TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV16_gc | TCA_SINGLE_ENABLE_bm; //16 prescaler, 1M.
  TCA0.SINGLE.INTCTRL = TCA_SINGLE_CMP1_bm; 

  // TimerB0 initialization for PWM output
  
  pinMode(6, OUTPUT);
  TCB0.CTRLA=TCB_CLKSEL_CLKDIV1_gc | TCB_ENABLE_bm; //62.5kHz
  analogWrite(6,120); 

  Serial.begin(115200);   //serial communication enable. Used for program debugging.
  interrupts();  //enable interrupts.
  Wire.begin(); // We need this for the i2c comms for the current sensor
  ina219.init(); // this initiates the current sensor
  Wire.setClock(700000); // set the comms speed for i2c
  
}


void loop() {
  if(loopTrigger){
   
    sampling();

    power_now = voltage_now*current;

    if (power_now > power_before)
    {
      pwm = pwm - 0.001;
    }  
    else if (power_now < power_before)
    {
      pwm = pwm + 0.001;
    }
    else
    {

    }
    pwm = saturation(pwm, 0.99, 0.01);
   // pwm = 0.6;
    pwm_modulate(pwm);


   
    com_count++;
    if(com_count>=1000){
      Serial.print("voltage_now: ");
      Serial.print(voltage_now);
      Serial.print("\t");

      Serial.print("voltage_before: ");
      Serial.print(voltage_before);
      Serial.print("\t");
      
      Serial.print("PWM: ");
      Serial.print(pwm);
      Serial.print("\t");

      Serial.print("Current: ");
      Serial.print(current);
      Serial.print("\t");

      Serial.print("Power Now: ");
      Serial.print(power_now);
      Serial.print("\t");

      Serial.print("Power Before: ");
      Serial.print(power_before);
      Serial.print("\n");


      com_count = 0;
    }
    power_before = power_now;
  //  power_before = ;
    voltage_before = voltage_now;
  //  voltage_before = 0.35;
    loopTrigger = 0;
  }
}

ISR(TCA0_CMP1_vect){
  TCA0.SINGLE.INTFLAGS |= TCA_SINGLE_CMP1_bm; //clear interrupt flag
  loopTrigger = 1;
}


void sampling() {
  sensorValue0 = analogRead(A0);
  voltage_now = sensorValue0 * (12400/2400) * (4.096/1023);
  current = -ina219.getCurrent_mA();
}

float saturation(float sat_input,float uplim,float lowlim) {
  if (sat_input > uplim) sat_input = uplim;
  else if (sat_input < lowlim) sat_input = lowlim;
  else
    ;
  return sat_input;
}


void pwm_modulate(float pwm_input) {
  analogWrite(6,(int)(255-pwm_input*255));
}

